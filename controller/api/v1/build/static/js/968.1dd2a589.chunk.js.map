{"version":3,"file":"static/js/968.1dd2a589.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Button.jsx","components/Card.jsx","components/Form.jsx","components/Formik.jsx","components/Grid.jsx","components/ListItem.jsx","components/ListItemText.jsx","components/Tab.jsx","components/TabPanel.jsx","components/Tabs.jsx","components/TextField.jsx","components/Tooltip.jsx","components/Typography.jsx","pages/Schema/schemas.jsx","../node_modules/@mui/icons-material/esm/Remove.js","pages/Schema/form.jsx","pages/Schema/index.jsx"],"sourcesContent":["import { Box } from '@mui/material'\n\nconst BoxComponent = ({ alt, children, component, src, sx }) => {\n  return (\n    <Box alt={alt} component={component} src={src} sx={sx}>\n      {children}\n    </Box>\n  )\n}\n\nexport default BoxComponent\n","// mui5\nimport { Button } from '@mui/material'\n\nconst ButtonComponent = ({\n  children,\n  color,\n  disabled,\n  endIcon,\n  onClick,\n  size,\n  startIcon,\n  sx,\n  type,\n  variant,\n}) => {\n  return (\n    <Button\n      color={color}\n      disabled={disabled}\n      endIcon={endIcon}\n      onClick={onClick}\n      size={size}\n      sx={sx}\n      startIcon={startIcon}\n      type={type}\n      variant={variant}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default ButtonComponent\n","import { Card, CardContent } from '@mui/material'\n\nconst CardComponent = ({ children, sx }) => {\n  return (\n    <Card sx={sx} elevation={3}>\n      <CardContent>{children}</CardContent>\n    </Card>\n  )\n}\n\nexport default CardComponent\n","import { Form } from 'formik'\n\nconst FormComponent = ({ children }) => {\n  return <Form>{children}</Form>\n}\n\nexport default FormComponent\n","import { Formik } from 'formik'\n\nconst FormikComponent = ({ children, initialValues, onSubmit, validate }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validate={validate}\n    >\n      {children}\n    </Formik>\n  )\n}\n\nexport default FormikComponent\n","import { Grid } from '@mui/material'\n\nconst GridComponent = ({\n  children,\n  container,\n  item,\n  justify,\n  justifyContent,\n  md,\n  spacing,\n  sx,\n  xs,\n}) => {\n  return (\n    <Grid\n      container={container}\n      item={item}\n      justify={justify}\n      justifyContent={justifyContent}\n      md={md}\n      spacing={spacing}\n      sx={sx}\n      xs={xs}\n    >\n      {children}\n    </Grid>\n  )\n}\n\nexport default GridComponent\n","import { ListItem } from '@mui/material'\n\nconst ListItemComponent = ({ children, disablePadding, onClick, sx }) => {\n  return (\n    <ListItem disablePadding={disablePadding} onClick={onClick} sx={sx}>\n      {children}\n    </ListItem>\n  )\n}\n\nexport default ListItemComponent\n","import { ListItemText } from '@mui/material'\nimport React from 'react'\n\nconst ListItemTextComponent = ({ color, primary, sx }) => {\n  return <ListItemText color={color} primary={primary} sx={{ sx }} />\n}\n\nexport default ListItemTextComponent\n","import { Tab } from '@mui/material'\n\nconst TabComponent = ({ label, ...props }) => {\n  return <Tab label={label} {...props} />\n}\n\nexport default TabComponent\n","import PropTypes from 'prop-types'\n// components\nimport BoxComponent from './Box'\nimport TypographyComponent from './Typography'\n\nexport const TabPanel = props => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`custom-tabpanel-${index}`}\n      aria-labelledby={`custom-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <BoxComponent sx={{ p: 3 }}>\n          <TypographyComponent>{children}</TypographyComponent>\n        </BoxComponent>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n}\n\nexport const a11yProps = index => {\n  return {\n    id: `custom-tab-${index}`,\n    'aria-controls': `custom-tabpanel-${index}`,\n  }\n}\n","import { Tabs } from '@mui/material'\n\nconst TabsComponent = ({ ariaLabel, children, onChange, value }) => {\n  return (\n    <Tabs aria-label={ariaLabel} onChange={onChange} value={value}>\n      {children}\n    </Tabs>\n  )\n}\n\nexport default TabsComponent\n","import { TextField } from '@mui/material'\n\nconst FieldComponent = ({\n  defaultValue,\n  disabled,\n  error,\n  focused,\n  fullWidth,\n  helperText,\n  id,\n  InputLabelProps,\n  label,\n  name,\n  onChange,\n  props,\n  required,\n  sx,\n  type,\n  value,\n}) => {\n  return (\n    <TextField\n      defaultValue={defaultValue}\n      disabled={disabled}\n      error={error}\n      focused={focused}\n      fullWidth={fullWidth}\n      helperText={helperText}\n      id={id}\n      InputLabelProps={InputLabelProps}\n      label={label}\n      name={name}\n      onChange={onChange}\n      required={required}\n      sx={sx}\n      type={type}\n      value={value}\n      {...props}\n    />\n  )\n}\n\nexport default FieldComponent\n","import { Tooltip } from '@mui/material'\n\nconst TooltipComponent = ({ children, title }) => {\n  return <Tooltip title={title}>{children}</Tooltip>\n}\n\nexport default TooltipComponent\n","import { Typography } from '@mui/material'\n\nconst TypographyComponent = ({ align, children, color, sx, variant }) => {\n  return (\n    <Typography\n      align={align}\n      color={color ? color : '#777'}\n      sx={sx}\n      variant={variant}\n    >\n      {children}\n    </Typography>\n  )\n}\n\nexport default TypographyComponent\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\n// components\nimport ButtonComponent from '../../components/Button'\nimport CardComponent from '../../components/Card'\nimport GridComponent from '../../components/Grid'\nimport ListItemComponent from '../../components/ListItem'\nimport ListItemTextComponent from '../../components/ListItemText'\n\nconst Schemas = () => {\n  const [didData, setDidData] = useState([])\n  const [schemaData, setSchemaData] = useState([])\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    let didApiURL = '/api/v1/cornerstone/issuer/did'\n    let schemaApiURL = '/api/v1/cornerstone/issuer/schemas'\n\n    if (process.env.API_BASE_URL) {\n      didApiURL = process.env.API_BASE_URL + '/cornerstone/issuer/did'\n\n      schemaApiURL = process.env.API_BASE_URL + '/cornerstone/issuer/schemas'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      if (process.env.DID) {\n        axios\n          .get(\n            process.env.REACT_APP_API_URL +\n              'schemas?schema_issuer_did=' +\n              process.env.DID\n          )\n          .then(response => {\n            setSchemaData(response.data.schema_ids)\n          })\n          .catch(error => console.log(error))\n      } else {\n        axios\n          .get(process.env.REACT_APP_API_URL + 'did')\n          .then(response => {\n            setDidData(response.data)\n          })\n          .catch(error => console.log(error))\n\n        if (didData.did !== 'undefined') {\n          axios\n            .get(\n              process.env.REACT_APP_API_URL +\n                'schemas?schema_issuer_did=' +\n                didData.did\n            )\n            .then(response => {\n              setSchemaData(response.data.schema_ids)\n            })\n            .catch(error => console.log(error))\n        }\n      }\n    } else {\n      if (process.env.DID) {\n        axios\n          .get(schemaApiURL + '?schema_issuer_did=' + process.env.DID)\n          .then(response => {\n            setSchemaData(response.data.schema_ids)\n          })\n          .catch(error => console.log(error))\n      } else {\n        axios\n          .get(didApiURL)\n          .then(response => {\n            setDidData(response.data)\n          })\n          .catch(error => console.log(error))\n\n        if (didData.did !== 'undefined') {\n          axios\n            .get(schemaApiURL + '?schema_issuer_did=' + didData.did)\n            .then(response => {\n              setSchemaData(response.data.schema_ids)\n            })\n            .catch(error => console.log(error))\n        }\n      }\n    }\n  }, [didData.did])\n\n  const getSchema = schemaId => {\n    let apiURL = '/api/v1/cornerstone/issuer/schema'\n\n    if (process.env.API_BASE_URL) {\n      apiURL = process.env.API_BASE_URL + '/cornerstone/issuer/schema'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      toast.promise(\n        axios\n          .get(process.env.REACT_APP_API_URL + 'schema?schema_id=' + schemaId)\n          .then(response => {\n            setData(response.data.schema)\n            toast.success('Fetched schema!')\n          })\n          .catch(error => {\n            toast.error(error.msg)\n          }),\n        {\n          pending: 'Fetching...',\n        }\n      )\n    } else {\n      toast.promise(\n        axios\n          .get(apiURL + '?schema_id=' + schemaId)\n          .then(response => {\n            setData(response.data.schema)\n            toast.success('Fetched schema!')\n          })\n          .catch(error => {\n            toast.error(error.msg)\n          }),\n        {\n          pending: 'Fetching...',\n        }\n      )\n    }\n  }\n\n  return (\n    <GridComponent container spacing={2}>\n      <GridComponent item xs={12} md={4}>\n        {schemaData ? (\n          schemaData.length === 0 ? (\n            <CardComponent\n              sx={{\n                m: '1rem',\n              }}\n            >\n              No schemas available!\n            </CardComponent>\n          ) : (\n            schemaData.map((schema, index) => (\n              <CardComponent\n                key={index}\n                sx={{\n                  m: '1rem',\n                  overflowWrap: 'break-word',\n                }}\n              >\n                <ListItemComponent>\n                  Schema ID:\n                  <ButtonComponent\n                    onClick={() => getSchema(schema)}\n                    sx={{ color: '#0645AD !important' }}\n                  >\n                    <ListItemTextComponent primary={schema} />\n                  </ButtonComponent>\n                </ListItemComponent>\n              </CardComponent>\n            ))\n          )\n        ) : (\n          <CardComponent\n            sx={{\n              m: '1rem',\n            }}\n          >\n            No schemas available!\n          </CardComponent>\n        )}\n      </GridComponent>\n      <GridComponent item xs={12} md={8}>\n        <CardComponent\n          sx={{\n            m: '1rem',\n          }}\n        >\n          <ListItemComponent>\n            Schema ID: <ListItemTextComponent primary={data.id} />\n          </ListItemComponent>\n          <ListItemComponent>\n            Schema Name: <ListItemTextComponent primary={data.name} />\n          </ListItemComponent>\n          <ListItemComponent>\n            Schema Version: <ListItemTextComponent primary={data.version} />\n          </ListItemComponent>\n          <ListItemComponent>\n            Schema Attributes:\n            <ListItemTextComponent primary={data.attrNames} />\n          </ListItemComponent>\n        </CardComponent>\n      </GridComponent>\n    </GridComponent>\n  )\n}\n\nexport default Schemas\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import { useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { FieldArray } from 'formik'\nimport { Remove } from '@mui/icons-material'\nimport axios from 'axios'\n// components\nimport ButtonComponent from '../../components/Button'\nimport CardComponent from '../../components/Card'\nimport GridComponent from '../../components/Grid'\nimport FormikComponent from '../../components/Formik'\nimport FormComponent from '../../components/Form'\nimport ListItemComponent from '../../components/ListItem'\nimport ListItemTextComponent from '../../components/ListItemText'\nimport TextFieldComponent from '../../components/TextField'\nimport TooltipComponent from '../../components/Tooltip'\n\nconst NewSchemaForm = () => {\n  const [data, setData] = useState([])\n  const [submitting, setSubmitting] = useState(false)\n\n  const handleSubmit = async schema => {\n    setSubmitting(true)\n    let apiURL = '/api/v1/cornerstone/issuer/schema/create'\n\n    if (process.env.API_BASE_URL) {\n      apiURL = process.env.API_BASE_URL + '/cornerstone/issuer/schema/create'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      await toast.promise(\n        axios\n          .post(process.env.REACT_APP_API_URL + 'schema/create', schema)\n          .then(response => {\n            setData(response.data.schema)\n            toast.success('Created Schema!')\n          })\n          .catch(error => {\n            toast.error(error.response.data.msg)\n          }),\n        {\n          pending: 'Creating...',\n        }\n      )\n    } else {\n      await toast.promise(\n        axios\n          .post(apiURL, schema)\n          .then(response => {\n            setData(response.data.schema)\n            toast.success('Created Schema!')\n          })\n          .catch(error => {\n            toast.error(error.response.data.msg)\n          }),\n        {\n          pending: 'Creating...',\n        }\n      )\n    }\n    setSubmitting(false)\n  }\n\n  return (\n    <CardComponent>\n      <GridComponent container spacing={2}>\n        <GridComponent item xs={12} md={6}>\n          <h2>Add New Schema</h2>\n          <FormikComponent\n            initialValues={{\n              schema_name: '',\n              schema_version: '',\n              attributes: [],\n            }}\n            onSubmit={(values, { resetForm }) => {\n              handleSubmit(values)\n              resetForm()\n            }}\n          >\n            {({ values, handleChange }) => (\n              <FormComponent>\n                <div>\n                  <TextFieldComponent\n                    id=\"schema_name\"\n                    name=\"schema_name\"\n                    value={values.schema_name}\n                    onChange={handleChange}\n                    label=\"Schema Name\"\n                    sx={{ m: '1rem' }}\n                    required\n                  />\n                </div>\n                <div>\n                  <TextFieldComponent\n                    id=\"schema_version\"\n                    name=\"schema_version\"\n                    value={values.schema_version}\n                    onChange={handleChange}\n                    label=\"Schema Version\"\n                    sx={{ m: '1rem' }}\n                    required\n                  />\n                </div>\n                <FieldArray\n                  name=\"attributes\"\n                  render={arrayHelpers => (\n                    <div>\n                      {values.attributes.map((attribute, index) => (\n                        <div key={index}>\n                          <TextFieldComponent\n                            id={`attributes.${index}`}\n                            name={`attributes.${index}`}\n                            value={attribute}\n                            onChange={handleChange}\n                            label=\"Schema Attribute Name\"\n                            sx={{ m: '1rem' }}\n                            required\n                          />\n                          <TooltipComponent title=\"Remove attribute\">\n                            <ButtonComponent\n                              onClick={() => arrayHelpers.remove(index)} // remove an attribute from the list\n                              sx={{ m: '1rem' }}\n                            >\n                              <Remove />\n                            </ButtonComponent>\n                          </TooltipComponent>\n                        </div>\n                      ))}\n                      <ButtonComponent\n                        variant=\"outlined\"\n                        sx={{ m: '1rem' }}\n                        onClick={() => arrayHelpers.push('')}\n                      >\n                        {/* show this when user has removed all attributes from the list */}\n                        Add an Attribute\n                      </ButtonComponent>\n                      <div>\n                        <ButtonComponent\n                          variant=\"contained\"\n                          type=\"submit\"\n                          sx={{ color: '#fff', m: '1rem' }}\n                          disabled={submitting}\n                        >\n                          Create\n                        </ButtonComponent>\n                      </div>\n                    </div>\n                  )}\n                />\n              </FormComponent>\n            )}\n          </FormikComponent>\n        </GridComponent>\n        <GridComponent item xs={12} md={6}>\n          {data ? (\n            <div style={{ padding: '2rem' }}>\n              <ListItemComponent>\n                <ListItemTextComponent primary={'Schema ID: ' + data.id} />\n              </ListItemComponent>\n              <ListItemComponent>\n                <ListItemTextComponent primary={'Schema Name: ' + data.name} />\n              </ListItemComponent>\n              <ListItemComponent>\n                <ListItemTextComponent\n                  primary={'Schema Version: ' + data.version}\n                />\n              </ListItemComponent>\n              <ListItemComponent>\n                <ListItemTextComponent\n                  primary={'Schema Attributes: ' + data.attrNames}\n                />\n              </ListItemComponent>\n            </div>\n          ) : (\n            ''\n          )}\n        </GridComponent>\n      </GridComponent>\n    </CardComponent>\n  )\n}\n\nexport default NewSchemaForm\n","import { useState } from 'react'\n// components\nimport BoxComponent from '../../components/Box'\nimport TabsComponent from '../../components/Tabs'\nimport TabComponent from '../../components/Tab'\nimport { a11yProps, TabPanel } from '../../components/TabPanel'\n// schema\nimport Schemas from './schemas'\nimport NewSchemaForm from './form'\n\nconst SchemaPage = () => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div style={{ margin: '1rem' }}>\n      <BoxComponent>\n        <TabsComponent\n          value={value}\n          onChange={handleChange}\n          ariaLabel=\"Schema Tabs\"\n        >\n          <TabComponent label=\"All\" {...a11yProps(0)} />\n          <TabComponent label=\"New\" {...a11yProps(1)} />\n        </TabsComponent>\n      </BoxComponent>\n      <TabPanel value={value} index={0}>\n        <Schemas />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <NewSchemaForm />\n      </TabPanel>\n    </div>\n  )\n}\n\nexport default SchemaPage\n"],"names":["alt","children","component","src","sx","color","disabled","endIcon","onClick","size","startIcon","type","variant","elevation","initialValues","onSubmit","validate","container","item","justify","justifyContent","md","spacing","xs","disablePadding","primary","label","props","TabPanel","value","index","other","role","hidden","id","p","a11yProps","ariaLabel","onChange","defaultValue","error","focused","fullWidth","helperText","InputLabelProps","name","required","title","align","useState","didData","setDidData","schemaData","setSchemaData","data","setData","useEffect","didApiURL","schemaApiURL","process","API_BASE_URL","DID","axios","then","response","catch","console","log","did","schema_ids","Grid","length","Card","m","map","schema","overflowWrap","ListItem","Button","schemaId","apiURL","toast","msg","pending","getSchema","ListItemText","version","attrNames","createSvgIcon","_jsx","d","submitting","setSubmitting","handleSubmit","Formik","schema_name","schema_version","attributes","values","resetForm","handleChange","Form","TextField","render","arrayHelpers","attribute","Tooltip","remove","Remove","push","style","padding","setValue","margin","Box","Tabs","event","newValue","Tab"],"sourceRoot":""}