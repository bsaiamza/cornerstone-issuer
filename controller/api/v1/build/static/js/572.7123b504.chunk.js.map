{"version":3,"file":"static/js/572.7123b504.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Button.jsx","components/Form.jsx","components/Formik.jsx","components/TextField.jsx","components/Typography.jsx","pages/Connection/modal.jsx","pages/Connection/index.jsx"],"sourcesContent":["import { Box } from '@mui/material'\n\nconst BoxComponent = ({ alt, children, component, src, sx }) => {\n  return (\n    <Box alt={alt} component={component} src={src} sx={sx}>\n      {children}\n    </Box>\n  )\n}\n\nexport default BoxComponent\n","// mui5\nimport { Button } from '@mui/material'\n\nconst ButtonComponent = ({\n  children,\n  color,\n  disabled,\n  endIcon,\n  onClick,\n  size,\n  startIcon,\n  sx,\n  type,\n  variant,\n}) => {\n  return (\n    <Button\n      color={color}\n      disabled={disabled}\n      endIcon={endIcon}\n      onClick={onClick}\n      size={size}\n      sx={sx}\n      startIcon={startIcon}\n      type={type}\n      variant={variant}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default ButtonComponent\n","import { Form } from 'formik'\n\nconst FormComponent = ({ children }) => {\n  return <Form>{children}</Form>\n}\n\nexport default FormComponent\n","import { Formik } from 'formik'\n\nconst FormikComponent = ({ children, initialValues, onSubmit }) => {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {children}\n    </Formik>\n  )\n}\n\nexport default FormikComponent\n","import { TextField } from '@mui/material'\n\nconst FieldComponent = ({\n  disabled,\n  focused,\n  fullWidth,\n  id,\n  label,\n  name,\n  onChange,\n  required,\n  sx,\n  type,\n  value,\n}) => {\n  return (\n    <TextField\n      disabled={disabled}\n      focused={focused}\n      fullWidth={fullWidth}\n      id={id}\n      label={label}\n      name={name}\n      onChange={onChange}\n      required={required}\n      sx={sx}\n      type={type}\n      value={value}\n    />\n  )\n}\n\nexport default FieldComponent\n","import { Typography } from '@mui/material'\n\nconst TypographyComponent = ({ align, children, color, sx, variant }) => {\n  return (\n    <Typography\n      align={align}\n      color={color ? color : '#777'}\n      sx={sx}\n      variant={variant}\n    >\n      {children}\n    </Typography>\n  )\n}\n\nexport default TypographyComponent\n","import { useState } from 'react'\nimport { Avatar, Divider, Modal } from '@mui/material'\nimport { Badge as CredentialIcon } from '@mui/icons-material'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\n// components\nimport BoxComponent from '../../components/Box'\nimport ButtonComponent from '../../components/Button'\nimport FormikComponent from '../../components/Formik'\nimport FormComponent from '../../components/Form'\nimport TextFieldComponent from '../../components/TextField'\nimport TypographyComponent from '../../components/Typography'\n\nconst CredentialModal = ({ connectionId, handleClose, open }) => {\n  const [submitting, setSubmitting] = useState(false)\n\n  const sendOffer = async offer => {\n    setSubmitting(true)\n    await toast.promise(\n      axios\n        .post('/api/v1/cornerstone/issuer/credential/offer', offer)\n        .then(response => {\n          console.log(response.data)\n          toast.success('Sent credential offer!')\n        })\n        .catch(error => {\n          toast.error(error.response.data.msg)\n        }),\n      {\n        pending: 'Sending...',\n      }\n    )\n    setSubmitting(false)\n  }\n\n  return (\n    <Modal onClose={handleClose} open={open}>\n      <BoxComponent\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          boxShadow: 24,\n          backgroundColor: 'background.paper',\n          borderRadius: '1rem',\n          p: '3rem 4rem 3rem 3rem',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <CredentialIcon />\n        </Avatar>\n        <TypographyComponent variant=\"h5\">\n          Issue a Cornerstone Credential\n        </TypographyComponent>\n        <Divider />\n        <FormikComponent\n          initialValues={{\n            schema_id: '',\n            cred_def_id: '',\n            connection_id: connectionId,\n            lprNumber: '',\n            givenName: '',\n            familyName: '',\n            gender: '',\n            birthDate: '',\n            birthCountry: '',\n          }}\n          onSubmit={(values, { resetForm }) => {\n            sendOffer(values)\n            // resetForm()\n          }}\n        >\n          {({ values, handleChange }) => (\n            <FormComponent>\n              <div>\n                <TextFieldComponent\n                  id=\"connection_id\"\n                  name=\"connection_id\"\n                  value={values.connection_id}\n                  // onChange={handleChange}\n                  label=\"Connection ID\"\n                  sx={{ m: '1rem' }}\n                  required\n                  disabled={true}\n                />\n              </div>\n              <div>\n                <TextFieldComponent\n                  id=\"schema_id\"\n                  name=\"schema_id\"\n                  value={values.schema_id}\n                  onChange={handleChange}\n                  label=\"Schema ID\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n\n                <TextFieldComponent\n                  id=\"cred_def_id\"\n                  name=\"cred_def_id\"\n                  value={values.cred_def_id}\n                  onChange={handleChange}\n                  label=\"Credential Definition ID\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n              <div>\n                <TextFieldComponent\n                  id=\"lprNumber\"\n                  name=\"lprNumber\"\n                  value={values.lprNumber}\n                  onChange={handleChange}\n                  label=\"ID Number\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n\n                <TextFieldComponent\n                  id=\"givenName\"\n                  name=\"givenName\"\n                  value={values.givenName}\n                  onChange={handleChange}\n                  label=\"First Name\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n              <div>\n                <TextFieldComponent\n                  id=\"familyName\"\n                  name=\"familyName\"\n                  value={values.familyName}\n                  onChange={handleChange}\n                  label=\"Last Name\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n\n                <TextFieldComponent\n                  id=\"gender\"\n                  name=\"gender\"\n                  value={values.gender}\n                  onChange={handleChange}\n                  label=\"Gender\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n              <div>\n                <TextFieldComponent\n                  id=\"birthDate\"\n                  name=\"birthDate\"\n                  value={values.birthDate}\n                  onChange={handleChange}\n                  label=\"D.O.B\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n\n                <TextFieldComponent\n                  id=\"birthCountry\"\n                  name=\"birthCountry\"\n                  value={values.birthCountry}\n                  onChange={handleChange}\n                  label=\"Country of Birth\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n\n              <div>\n                <ButtonComponent\n                  variant=\"contained\"\n                  type=\"submit\"\n                  sx={{ color: '#fff', m: '1rem' }}\n                  disabled={submitting}\n                >\n                  Send\n                </ButtonComponent>\n              </div>\n            </FormComponent>\n          )}\n        </FormikComponent>\n      </BoxComponent>\n    </Modal>\n  )\n}\n\nexport default CredentialModal\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport MaterialTable from '@material-table/core'\nimport {\n  Badge as CredentialIcon,\n  Refresh as RefreshIcon,\n} from '@mui/icons-material'\nimport { toast } from 'react-toastify'\n// components\nimport TypographyComponent from '../../components/Typography'\nimport CredentialModal from './modal'\n\nconst ConnectionsPage = () => {\n  const [data, setData] = useState([])\n  const [open, setOpen] = useState(false)\n  const [connectionId, setConnectionId] = useState('')\n\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n\n  useEffect(() => {\n    axios\n      .get('/api/v1/cornerstone/issuer/connections')\n      .then(response => {\n        response.data.map(connection => {\n          if (connection.state === 'active') {\n            setData([connection])\n          }\n        })\n      })\n      .catch(error => console.log(error))\n  }, [])\n\n  const refreshConnections = async () => {\n    await toast.promise(\n      axios\n        .get('/api/v1/cornerstone/issuer/connections')\n        .then(response => {\n          response.data.map(connection => {\n            if (connection.state === 'active') {\n              setData([connection])\n            }\n          })\n          toast.success('Refreshed connections!')\n        })\n        .catch(error => console.log(error)),\n      {\n        pending: 'Refreshing...',\n      }\n    )\n  }\n\n  const renderModal = (\n    <CredentialModal\n      connectionId={connectionId}\n      handleClose={handleClose}\n      open={open}\n    />\n  )\n\n  return (\n    <div style={{ margin: '2rem' }}>\n      <MaterialTable\n        style={{ padding: '1rem' }}\n        title={\n          <TypographyComponent\n            variant=\"h5\"\n            sx={{ textDecoration: 'underline' }}\n          >\n            Connections\n          </TypographyComponent>\n        }\n        data={data}\n        columns={[\n          {\n            title: <TypographyComponent variant=\"h6\">Name</TypographyComponent>,\n            field: 'their_label',\n          },\n          {\n            title: (\n              <TypographyComponent variant=\"h6\">\n                Connected On\n              </TypographyComponent>\n            ),\n            field: 'created_at',\n            type: 'datetime',\n          },\n          {\n            title: (\n              <TypographyComponent variant=\"h6\">\n                Connection ID\n              </TypographyComponent>\n            ),\n            field: 'connection_id',\n          },\n        ]}\n        actions={[\n          {\n            icon: () => <RefreshIcon />,\n            tooltip: 'Refresh connections',\n            isFreeAction: true,\n            onClick: () => refreshConnections(),\n          },\n          rowData => ({\n            icon: () => <CredentialIcon />,\n            tooltip: 'Issue Credential',\n            onClick: () => {\n              handleOpen()\n              setConnectionId(rowData.connection_id)\n            },\n          }),\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n      />\n      {renderModal}\n    </div>\n  )\n}\n\nexport default ConnectionsPage\n"],"names":["alt","children","component","src","sx","color","disabled","endIcon","onClick","size","startIcon","type","variant","initialValues","onSubmit","focused","fullWidth","id","label","name","onChange","required","value","align","connectionId","handleClose","open","useState","submitting","setSubmitting","sendOffer","offer","toast","axios","then","response","console","log","data","catch","error","msg","pending","Modal","onClose","Box","position","top","left","transform","boxShadow","backgroundColor","borderRadius","p","display","flexDirection","alignItems","justifyContent","textAlign","Avatar","m","Typography","Divider","Formik","schema_id","cred_def_id","connection_id","lprNumber","givenName","familyName","gender","birthDate","birthCountry","values","resetForm","handleChange","Form","TextField","Button","setData","setOpen","setConnectionId","useEffect","map","connection","state","refreshConnections","renderModal","style","margin","padding","title","textDecoration","columns","field","actions","icon","Refresh","tooltip","isFreeAction","rowData","options","actionsColumnIndex"],"sourceRoot":""}